from fastapi import FastAPI, HTTPException
import uuid

app = FastAPI()

jobs = {}

@app.post("/jobs", status_code=202)
def create_job():
    job_id = str(uuid.uuid4())
    jobs[job_id] = {"status": "PENDING", "result": None}
    # burada background task ML modelini çağıracak
    return {"job_id": job_id, "status": "PENDING"}


@app.get("/jobs/{job_id}")
def get_job(job_id: str):
    job = jobs.get(job_id)
    if not job:
        raise HTTPException(status_code=404, detail="Job not found")

    if job["status"] == "PENDING":
        return {"job_id": job_id, "status": "PENDING"}, 202

    if job["status"] == "READY":
        return {"job_id": job_id, "status": "READY", "result": job["result"]}, 200

    if job["status"] == "FAILED":
        raise HTTPException(status_code=500, detail=job.get("error", "Unknown error"))
